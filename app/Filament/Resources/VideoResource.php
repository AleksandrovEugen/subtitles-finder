<?php

namespace App\Filament\Resources;

use App\Filament\Resources\VideoResource\Pages;
use App\Models\Playlist;
use App\Models\Video;
use Filament\Forms\Components\FileUpload;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\Textarea;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Components\Toggle;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Columns\ImageColumn;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Columns\ToggleColumn;
use Filament\Tables\Filters\Filter;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;

class VideoResource extends Resource
{
    protected static ?string $model = Video::class;

    protected static ?string $navigationIcon = 'heroicon-o-film';

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                TextInput::make('youtube_id')->required(),
                TextInput::make('title')->nullable(),
                Textarea::make('subtitles')->nullable()->disabled(),
                Textarea::make('subtitles_autogenerated')->nullable(),
                Toggle::make('is_enabled')->default(true),
                Select::make('playlist_id')
                    ->options(Playlist::all()->pluck('title', 'id'))
                    ->required(),
                FileUpload::make('attachments')->image(),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                TextColumn::make('id')
                    ->numeric()
                    ->sortable(),
                ImageColumn::make('attachments'),
                TextColumn::make('title')
                    ->limit(70, '...')
                    ->sortable()
                    ->searchable(),
                ToggleColumn::make('is_enabled'),
                TextColumn::make('playlist.title'),
            ])
            ->filters([
                Filter::make('has_subtitles')
                    ->query(fn (Builder $query): Builder => $query->whereNotNull('subtitles')),
                Filter::make('has_autogenerated_subtitles')
                    ->query(fn (Builder $query): Builder => $query->whereNull('subtitles')->whereNotNull('subtitles_autogenerated')),
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListVideos::route('/'),
            'create' => Pages\CreateVideo::route('/create'),
            'edit' => Pages\EditVideo::route('/{record}/edit'),
        ];
    }
}
